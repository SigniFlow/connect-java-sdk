/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.SigniFlowup.connect.api;

import com.SigniFlowup.connect.*;
import com.SigniFlowup.connect.auth.*;
import com.SigniFlowup.connect.models.CreatePortfolioRequest;
import com.SigniFlowup.connect.models.CreatePortfolioResponse;
import com.SigniFlowup.connect.models.DownloadPortfolioRequest;
import com.SigniFlowup.connect.models.DownloadPortfolioResponse;
import com.SigniFlowup.connect.models.LinkToPortfolioRequest;
import com.SigniFlowup.connect.models.LinkToPortfolioResponse;
import com.SigniFlowup.connect.models.SetDocumentOrderRequest;
import com.SigniFlowup.connect.models.SetDocumentOrderResponse;
import com.SigniFlowup.connect.models.SharePortfolioNoEmailRequest;
import com.SigniFlowup.connect.models.SharePortfolioNoEmailResponse;
import com.SigniFlowup.connect.models.SharePortfolioRequest;
import com.SigniFlowup.connect.models.SharePortfolioResponse;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PortfoliosApi
 */
public class PortfoliosApiTest {

    private final PortfoliosApi api = new PortfoliosApi();

    /**
     * Create Portfolio
     *
     * #### Used to create a portfolio to group documents.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postCreatePortfolioTest() throws ApiException {
        //String contentType = null;
        //CreatePortfolioRequest createPortfolioRequest = null;
        //CreatePortfolioResponse response = api.postCreatePortfolio(contentType, createPortfolioRequest);
        // TODO: test validations
    }

    /**
     * Download Portfolio
     *
     * #### Used to return a string that is then used to download a portfolio.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postDownloadPortfolioTest() throws ApiException {
        //String contentType = null;
        //DownloadPortfolioRequest downloadPortfolioRequest = null;
        //DownloadPortfolioResponse response = api.postDownloadPortfolio(contentType, downloadPortfolioRequest);
        // TODO: test validations
    }

    /**
     * Link To Portfolio
     *
     * #### Used to get the url link to a portfolio.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postLinkToPortfolioTest() throws ApiException {
        //String contentType = null;
        //LinkToPortfolioRequest linkToPortfolioRequest = null;
        //LinkToPortfolioResponse response = api.postLinkToPortfolio(contentType, linkToPortfolioRequest);
        // TODO: test validations
    }

    /**
     * Set Document Order
     *
     * #### Used to set the order of documents that needs to be signed.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postSetDocumentOrderTest() throws ApiException {
        //String contentType = null;
        //SetDocumentOrderRequest setDocumentOrderRequest = null;
        //SetDocumentOrderResponse response = api.postSetDocumentOrder(contentType, setDocumentOrderRequest);
        // TODO: test validations
    }

    /**
     * Share Portfolio
     *
     * #### Used when a user wants to share a portfolio with someone else.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postSharePortfolioTest() throws ApiException {
        //String contentType = null;
        //SharePortfolioRequest sharePortfolioRequest = null;
        //SharePortfolioResponse response = api.postSharePortfolio(contentType, sharePortfolioRequest);
        // TODO: test validations
    }

    /**
     * Share Portfolio No Email
     *
     * #### Used when a user wants to share a portfolio without sending out an email.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postSharePortfolioNoEmailTest() throws ApiException {
        //String contentType = null;
        //SharePortfolioNoEmailRequest sharePortfolioNoEmailRequest = null;
        //SharePortfolioNoEmailResponse response = api.postSharePortfolioNoEmail(contentType, sharePortfolioNoEmailRequest);
        // TODO: test validations
    }

}
