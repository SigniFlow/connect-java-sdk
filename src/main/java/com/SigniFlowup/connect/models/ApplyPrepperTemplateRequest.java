/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.SigniFlowup.connect.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.SigniFlowup.connect.models.TokenField;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.SigniFlowup.connect.JSON;


/**
 * #### Used to send a request for applying a template.
 */
@ApiModel(description = "#### Used to send a request for applying a template.")
@JsonPropertyOrder({
  ApplyPrepperTemplateRequest.JSON_PROPERTY_DOC_I_D_FIELD,
  ApplyPrepperTemplateRequest.JSON_PROPERTY_PREPPER_TEMPLATE_I_D_FIELD,
  ApplyPrepperTemplateRequest.JSON_PROPERTY_TOKEN_FIELD
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ApplyPrepperTemplateRequest {
  public static final String JSON_PROPERTY_DOC_I_D_FIELD = "DocIDField";
  private BigDecimal docIDField;

  public static final String JSON_PROPERTY_PREPPER_TEMPLATE_I_D_FIELD = "PrepperTemplateIDField";
  private BigDecimal prepperTemplateIDField;

  public static final String JSON_PROPERTY_TOKEN_FIELD = "TokenField";
  private TokenField tokenField;


  public ApplyPrepperTemplateRequest docIDField(BigDecimal docIDField) {
    this.docIDField = docIDField;
    return this;
  }

   /**
   * Document ID field.
   * @return docIDField
  **/
  @ApiModelProperty(example = "2147483647", required = true, value = "Document ID field.")
  @JsonProperty(JSON_PROPERTY_DOC_I_D_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getDocIDField() {
    return docIDField;
  }


  public void setDocIDField(BigDecimal docIDField) {
    this.docIDField = docIDField;
  }


  public ApplyPrepperTemplateRequest prepperTemplateIDField(BigDecimal prepperTemplateIDField) {
    this.prepperTemplateIDField = prepperTemplateIDField;
    return this;
  }

   /**
   * Document prepper template ID field.
   * @return prepperTemplateIDField
  **/
  @ApiModelProperty(example = "21344", required = true, value = "Document prepper template ID field.")
  @JsonProperty(JSON_PROPERTY_PREPPER_TEMPLATE_I_D_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getPrepperTemplateIDField() {
    return prepperTemplateIDField;
  }


  public void setPrepperTemplateIDField(BigDecimal prepperTemplateIDField) {
    this.prepperTemplateIDField = prepperTemplateIDField;
  }


  public ApplyPrepperTemplateRequest tokenField(TokenField tokenField) {
    this.tokenField = tokenField;
    return this;
  }

   /**
   * Get tokenField
   * @return tokenField
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TOKEN_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TokenField getTokenField() {
    return tokenField;
  }


  public void setTokenField(TokenField tokenField) {
    this.tokenField = tokenField;
  }


  /**
   * Return true if this ApplyPrepperTemplateRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplyPrepperTemplateRequest applyPrepperTemplateRequest = (ApplyPrepperTemplateRequest) o;
    return Objects.equals(this.docIDField, applyPrepperTemplateRequest.docIDField) &&
        Objects.equals(this.prepperTemplateIDField, applyPrepperTemplateRequest.prepperTemplateIDField) &&
        Objects.equals(this.tokenField, applyPrepperTemplateRequest.tokenField);
  }

  @Override
  public int hashCode() {
    return Objects.hash(docIDField, prepperTemplateIDField, tokenField);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplyPrepperTemplateRequest {\n");
    sb.append("    docIDField: ").append(toIndentedString(docIDField)).append("\n");
    sb.append("    prepperTemplateIDField: ").append(toIndentedString(prepperTemplateIDField)).append("\n");
    sb.append("    tokenField: ").append(toIndentedString(tokenField)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

