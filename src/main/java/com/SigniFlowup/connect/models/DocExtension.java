/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.SigniFlowup.connect.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import io.swagger.annotations.ApiModel;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.SigniFlowup.connect.JSON;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * #### Document Extension   &#x60; 0 &#x3D; pdf 1 &#x3D; xls 2 &#x3D; txt 3 &#x3D; xlsx 4 &#x3D; docx 5 &#x3D; doc 6 &#x3D; xml 7 &#x3D; png 8 &#x3D; jpg 9 &#x3D; gif &#x60; 
 */
public enum DocExtension {
  
  /**
   * pdf
   */
  pdf(0),
  
  /**
   * xls
   */
  xls(1),
  
  /**
   * txt
   */
  txt(2),
  
  /**
   * xlsx
   */
  xlsx(3),
  
  /**
   * docx
   */
  docx(4),
  
  /**
   * doc
   */
  doc(5),
  
  /**
   * xml
   */
  xml(6),
  
  /**
   * png
   */
  png(7),
  
  /**
   * jpg
   */
  jpg(8),
  
  /**
   * gif
   */
  gif(9);

  private Integer value;

  DocExtension(Integer value) {
    this.value = value;
  }

  @JsonValue
  public Integer getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static DocExtension fromValue(Integer value) {
    for (DocExtension b : DocExtension.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

