/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.SigniFlowup.connect.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.SigniFlowup.connect.models.FullWorkflowRequestGroupStepFieldGroupMembersField;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.SigniFlowup.connect.JSON;


/**
 * Steps of the group signers in the workflow.
 */
@ApiModel(description = "Steps of the group signers in the workflow.")
@JsonPropertyOrder({
  FullWorkflowRequestGroupStepField.JSON_PROPERTY_GROUP_MEMBERS_FIELD,
  FullWorkflowRequestGroupStepField.JSON_PROPERTY_GROUP_NAME_FIELD,
  FullWorkflowRequestGroupStepField.JSON_PROPERTY_REQUIRED_NUMBER_OF_SIGNATURES_FIELD
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FullWorkflowRequestGroupStepField {
  public static final String JSON_PROPERTY_GROUP_MEMBERS_FIELD = "GroupMembersField";
  private Set<FullWorkflowRequestGroupStepFieldGroupMembersField> groupMembersField = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_GROUP_NAME_FIELD = "GroupNameField";
  private String groupNameField;

  public static final String JSON_PROPERTY_REQUIRED_NUMBER_OF_SIGNATURES_FIELD = "RequiredNumberOfSignaturesField";
  private BigDecimal requiredNumberOfSignaturesField;


  public FullWorkflowRequestGroupStepField groupMembersField(Set<FullWorkflowRequestGroupStepFieldGroupMembersField> groupMembersField) {
    this.groupMembersField = groupMembersField;
    return this;
  }

  public FullWorkflowRequestGroupStepField addGroupMembersFieldItem(FullWorkflowRequestGroupStepFieldGroupMembersField groupMembersFieldItem) {
    this.groupMembersField.add(groupMembersFieldItem);
    return this;
  }

   /**
   * The list of users in a group in the workflow.
   * @return groupMembersField
  **/
  @ApiModelProperty(required = true, value = "The list of users in a group in the workflow.")
  @JsonProperty(JSON_PROPERTY_GROUP_MEMBERS_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<FullWorkflowRequestGroupStepFieldGroupMembersField> getGroupMembersField() {
    return groupMembersField;
  }


  public void setGroupMembersField(Set<FullWorkflowRequestGroupStepFieldGroupMembersField> groupMembersField) {
    this.groupMembersField = groupMembersField;
  }


  public FullWorkflowRequestGroupStepField groupNameField(String groupNameField) {
    this.groupNameField = groupNameField;
    return this;
  }

   /**
   * Group name.
   * @return groupNameField
  **/
  @ApiModelProperty(example = "Managers", required = true, value = "Group name.")
  @JsonProperty(JSON_PROPERTY_GROUP_NAME_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getGroupNameField() {
    return groupNameField;
  }


  public void setGroupNameField(String groupNameField) {
    this.groupNameField = groupNameField;
  }


  public FullWorkflowRequestGroupStepField requiredNumberOfSignaturesField(BigDecimal requiredNumberOfSignaturesField) {
    this.requiredNumberOfSignaturesField = requiredNumberOfSignaturesField;
    return this;
  }

   /**
   * Required number of signatures in the group.
   * @return requiredNumberOfSignaturesField
  **/
  @ApiModelProperty(example = "3", required = true, value = "Required number of signatures in the group.")
  @JsonProperty(JSON_PROPERTY_REQUIRED_NUMBER_OF_SIGNATURES_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getRequiredNumberOfSignaturesField() {
    return requiredNumberOfSignaturesField;
  }


  public void setRequiredNumberOfSignaturesField(BigDecimal requiredNumberOfSignaturesField) {
    this.requiredNumberOfSignaturesField = requiredNumberOfSignaturesField;
  }


  /**
   * Return true if this FullWorkflowRequest_GroupStepField object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FullWorkflowRequestGroupStepField fullWorkflowRequestGroupStepField = (FullWorkflowRequestGroupStepField) o;
    return Objects.equals(this.groupMembersField, fullWorkflowRequestGroupStepField.groupMembersField) &&
        Objects.equals(this.groupNameField, fullWorkflowRequestGroupStepField.groupNameField) &&
        Objects.equals(this.requiredNumberOfSignaturesField, fullWorkflowRequestGroupStepField.requiredNumberOfSignaturesField);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupMembersField, groupNameField, requiredNumberOfSignaturesField);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FullWorkflowRequestGroupStepField {\n");
    sb.append("    groupMembersField: ").append(toIndentedString(groupMembersField)).append("\n");
    sb.append("    groupNameField: ").append(toIndentedString(groupNameField)).append("\n");
    sb.append("    requiredNumberOfSignaturesField: ").append(toIndentedString(requiredNumberOfSignaturesField)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

