/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.SigniFlowup.connect.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import io.swagger.annotations.ApiModel;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.SigniFlowup.connect.JSON;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * #### Document Prepper Advanced Field Types  &#x60; 0 &#x3D; DropDown 1 &#x3D; CheckBoxGroup 2 &#x3D; OptionalDropDown 3 &#x3D; RadioGroup 4 &#x3D; DateMand 5 &#x3D; DateOpt 6 &#x3D; DropDownCountry 7 &#x3D; OptionalDropDownCountry 8 &#x3D; DropDownMobilePrefix 9 &#x3D; OptionalDropDownMobilePrefix &#x60;
 */
public enum AdvancedFieldType {
  
  /**
   * DropDown
   */
  DropDown(new BigDecimal("0")),
  
  /**
   * CheckBoxGroup
   */
  CheckBoxGroup(new BigDecimal("1")),
  
  /**
   * OptionalDropDown
   */
  OptionalDropDown(new BigDecimal("2")),
  
  /**
   * RadioGroup
   */
  RadioGroup(new BigDecimal("3")),
  
  /**
   * DateMand
   */
  DateMand(new BigDecimal("4")),
  
  /**
   * DateOpt
   */
  DateOpt(new BigDecimal("5")),
  
  /**
   * DropDownCountry
   */
  DropDownCountry(new BigDecimal("6")),
  
  /**
   * OptionalDropDownCountry
   */
  OptionalDropDownCountry(new BigDecimal("7")),
  
  /**
   * DropDownMobilePrefix
   */
  DropDownMobilePrefix(new BigDecimal("8")),
  
  /**
   * OptionalDropDownMobilePrefix
   */
  OptionalDropDownMobilePrefix(new BigDecimal("9"));

  private BigDecimal value;

  AdvancedFieldType(BigDecimal value) {
    this.value = value;
  }

  @JsonValue
  public BigDecimal getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static AdvancedFieldType fromValue(BigDecimal value) {
    for (AdvancedFieldType b : AdvancedFieldType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

