/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.SigniFlowup.connect.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.SigniFlowup.connect.models.FieldType;
import com.SigniFlowup.connect.models.TokenField;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.SigniFlowup.connect.JSON;


/**
 * #### The request sent when fields are added to a document using a FlowID.
 */
@ApiModel(description = "#### The request sent when fields are added to a document using a FlowID.")
@JsonPropertyOrder({
  DocPrepperAddFieldsFlowIDRequest.JSON_PROPERTY_DOC_FIELD_TYPE_FIELD,
  DocPrepperAddFieldsFlowIDRequest.JSON_PROPERTY_DOC_I_D_FIELD,
  DocPrepperAddFieldsFlowIDRequest.JSON_PROPERTY_FLOW_I_D_FIELD,
  DocPrepperAddFieldsFlowIDRequest.JSON_PROPERTY_HEIGHT_FIELD,
  DocPrepperAddFieldsFlowIDRequest.JSON_PROPERTY_WIDTH_FIELD,
  DocPrepperAddFieldsFlowIDRequest.JSON_PROPERTY_IS_INVISIBLE_FIELD,
  DocPrepperAddFieldsFlowIDRequest.JSON_PROPERTY_LINK_TO_FIELD,
  DocPrepperAddFieldsFlowIDRequest.JSON_PROPERTY_PAGE_NUMBER_FIELD,
  DocPrepperAddFieldsFlowIDRequest.JSON_PROPERTY_NAME_FIELD,
  DocPrepperAddFieldsFlowIDRequest.JSON_PROPERTY_USER_EMAIL_FIELD,
  DocPrepperAddFieldsFlowIDRequest.JSON_PROPERTY_XCOORDINATE_FIELD,
  DocPrepperAddFieldsFlowIDRequest.JSON_PROPERTY_YCOORDINATE_FIELD,
  DocPrepperAddFieldsFlowIDRequest.JSON_PROPERTY_TOKEN_FIELD
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DocPrepperAddFieldsFlowIDRequest {
  public static final String JSON_PROPERTY_DOC_FIELD_TYPE_FIELD = "DocFieldTypeField";
  private FieldType docFieldTypeField;

  public static final String JSON_PROPERTY_DOC_I_D_FIELD = "DocIDField";
  private BigDecimal docIDField;

  public static final String JSON_PROPERTY_FLOW_I_D_FIELD = "FlowIDField";
  private BigDecimal flowIDField;

  public static final String JSON_PROPERTY_HEIGHT_FIELD = "HeightField";
  private String heightField;

  public static final String JSON_PROPERTY_WIDTH_FIELD = "WidthField";
  private String widthField;

  public static final String JSON_PROPERTY_IS_INVISIBLE_FIELD = "IsInvisibleField";
  private Boolean isInvisibleField;

  public static final String JSON_PROPERTY_LINK_TO_FIELD = "LinkToField";
  private String linkToField;

  public static final String JSON_PROPERTY_PAGE_NUMBER_FIELD = "PageNumberField";
  private BigDecimal pageNumberField;

  public static final String JSON_PROPERTY_NAME_FIELD = "NameField";
  private String nameField;

  public static final String JSON_PROPERTY_USER_EMAIL_FIELD = "UserEmailField";
  private String userEmailField;

  public static final String JSON_PROPERTY_XCOORDINATE_FIELD = "XCoordinateField";
  private String xcoordinateField;

  public static final String JSON_PROPERTY_YCOORDINATE_FIELD = "YCoordinateField";
  private String ycoordinateField;

  public static final String JSON_PROPERTY_TOKEN_FIELD = "TokenField";
  private TokenField tokenField;


  public DocPrepperAddFieldsFlowIDRequest docFieldTypeField(FieldType docFieldTypeField) {
    this.docFieldTypeField = docFieldTypeField;
    return this;
  }

   /**
   * Get docFieldTypeField
   * @return docFieldTypeField
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DOC_FIELD_TYPE_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FieldType getDocFieldTypeField() {
    return docFieldTypeField;
  }


  public void setDocFieldTypeField(FieldType docFieldTypeField) {
    this.docFieldTypeField = docFieldTypeField;
  }


  public DocPrepperAddFieldsFlowIDRequest docIDField(BigDecimal docIDField) {
    this.docIDField = docIDField;
    return this;
  }

   /**
   * Document ID.
   * @return docIDField
  **/
  @ApiModelProperty(example = "12344", required = true, value = "Document ID.")
  @JsonProperty(JSON_PROPERTY_DOC_I_D_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getDocIDField() {
    return docIDField;
  }


  public void setDocIDField(BigDecimal docIDField) {
    this.docIDField = docIDField;
  }


  public DocPrepperAddFieldsFlowIDRequest flowIDField(BigDecimal flowIDField) {
    this.flowIDField = flowIDField;
    return this;
  }

   /**
   * Document Flow ID.
   * @return flowIDField
  **/
  @ApiModelProperty(example = "11111", required = true, value = "Document Flow ID.")
  @JsonProperty(JSON_PROPERTY_FLOW_I_D_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getFlowIDField() {
    return flowIDField;
  }


  public void setFlowIDField(BigDecimal flowIDField) {
    this.flowIDField = flowIDField;
  }


  public DocPrepperAddFieldsFlowIDRequest heightField(String heightField) {
    this.heightField = heightField;
    return this;
  }

   /**
   * Field height.
   * @return heightField
  **/
  @ApiModelProperty(example = "25", required = true, value = "Field height.")
  @JsonProperty(JSON_PROPERTY_HEIGHT_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHeightField() {
    return heightField;
  }


  public void setHeightField(String heightField) {
    this.heightField = heightField;
  }


  public DocPrepperAddFieldsFlowIDRequest widthField(String widthField) {
    this.widthField = widthField;
    return this;
  }

   /**
   * Field width.
   * @return widthField
  **/
  @ApiModelProperty(example = "20", required = true, value = "Field width.")
  @JsonProperty(JSON_PROPERTY_WIDTH_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getWidthField() {
    return widthField;
  }


  public void setWidthField(String widthField) {
    this.widthField = widthField;
  }


  public DocPrepperAddFieldsFlowIDRequest isInvisibleField(Boolean isInvisibleField) {
    this.isInvisibleField = isInvisibleField;
    return this;
  }

   /**
   * Is the field invisible.
   * @return isInvisibleField
  **/
  @ApiModelProperty(required = true, value = "Is the field invisible.")
  @JsonProperty(JSON_PROPERTY_IS_INVISIBLE_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsInvisibleField() {
    return isInvisibleField;
  }


  public void setIsInvisibleField(Boolean isInvisibleField) {
    this.isInvisibleField = isInvisibleField;
  }


  public DocPrepperAddFieldsFlowIDRequest linkToField(String linkToField) {
    this.linkToField = linkToField;
    return this;
  }

   /**
   * Document link.
   * @return linkToField
  **/
  @ApiModelProperty(required = true, value = "Document link.")
  @JsonProperty(JSON_PROPERTY_LINK_TO_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLinkToField() {
    return linkToField;
  }


  public void setLinkToField(String linkToField) {
    this.linkToField = linkToField;
  }


  public DocPrepperAddFieldsFlowIDRequest pageNumberField(BigDecimal pageNumberField) {
    this.pageNumberField = pageNumberField;
    return this;
  }

   /**
   * Field page number.
   * @return pageNumberField
  **/
  @ApiModelProperty(example = "2", required = true, value = "Field page number.")
  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getPageNumberField() {
    return pageNumberField;
  }


  public void setPageNumberField(BigDecimal pageNumberField) {
    this.pageNumberField = pageNumberField;
  }


  public DocPrepperAddFieldsFlowIDRequest nameField(String nameField) {
    this.nameField = nameField;
    return this;
  }

   /**
   * Field name field.
   * @return nameField
  **/
  @ApiModelProperty(required = true, value = "Field name field.")
  @JsonProperty(JSON_PROPERTY_NAME_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNameField() {
    return nameField;
  }


  public void setNameField(String nameField) {
    this.nameField = nameField;
  }


  public DocPrepperAddFieldsFlowIDRequest userEmailField(String userEmailField) {
    this.userEmailField = userEmailField;
    return this;
  }

   /**
   * User email address field.
   * @return userEmailField
  **/
  @ApiModelProperty(example = "email@domain.com", required = true, value = "User email address field.")
  @JsonProperty(JSON_PROPERTY_USER_EMAIL_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUserEmailField() {
    return userEmailField;
  }


  public void setUserEmailField(String userEmailField) {
    this.userEmailField = userEmailField;
  }


  public DocPrepperAddFieldsFlowIDRequest xcoordinateField(String xcoordinateField) {
    this.xcoordinateField = xcoordinateField;
    return this;
  }

   /**
   * Document field x-coordinates.
   * @return xcoordinateField
  **/
  @ApiModelProperty(example = "50", required = true, value = "Document field x-coordinates.")
  @JsonProperty(JSON_PROPERTY_XCOORDINATE_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getXcoordinateField() {
    return xcoordinateField;
  }


  public void setXcoordinateField(String xcoordinateField) {
    this.xcoordinateField = xcoordinateField;
  }


  public DocPrepperAddFieldsFlowIDRequest ycoordinateField(String ycoordinateField) {
    this.ycoordinateField = ycoordinateField;
    return this;
  }

   /**
   * Document field y-coordinates.
   * @return ycoordinateField
  **/
  @ApiModelProperty(example = "150", required = true, value = "Document field y-coordinates.")
  @JsonProperty(JSON_PROPERTY_YCOORDINATE_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getYcoordinateField() {
    return ycoordinateField;
  }


  public void setYcoordinateField(String ycoordinateField) {
    this.ycoordinateField = ycoordinateField;
  }


  public DocPrepperAddFieldsFlowIDRequest tokenField(TokenField tokenField) {
    this.tokenField = tokenField;
    return this;
  }

   /**
   * Get tokenField
   * @return tokenField
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TOKEN_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TokenField getTokenField() {
    return tokenField;
  }


  public void setTokenField(TokenField tokenField) {
    this.tokenField = tokenField;
  }


  /**
   * Return true if this DocPrepperAddFieldsFlowIDRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocPrepperAddFieldsFlowIDRequest docPrepperAddFieldsFlowIDRequest = (DocPrepperAddFieldsFlowIDRequest) o;
    return Objects.equals(this.docFieldTypeField, docPrepperAddFieldsFlowIDRequest.docFieldTypeField) &&
        Objects.equals(this.docIDField, docPrepperAddFieldsFlowIDRequest.docIDField) &&
        Objects.equals(this.flowIDField, docPrepperAddFieldsFlowIDRequest.flowIDField) &&
        Objects.equals(this.heightField, docPrepperAddFieldsFlowIDRequest.heightField) &&
        Objects.equals(this.widthField, docPrepperAddFieldsFlowIDRequest.widthField) &&
        Objects.equals(this.isInvisibleField, docPrepperAddFieldsFlowIDRequest.isInvisibleField) &&
        Objects.equals(this.linkToField, docPrepperAddFieldsFlowIDRequest.linkToField) &&
        Objects.equals(this.pageNumberField, docPrepperAddFieldsFlowIDRequest.pageNumberField) &&
        Objects.equals(this.nameField, docPrepperAddFieldsFlowIDRequest.nameField) &&
        Objects.equals(this.userEmailField, docPrepperAddFieldsFlowIDRequest.userEmailField) &&
        Objects.equals(this.xcoordinateField, docPrepperAddFieldsFlowIDRequest.xcoordinateField) &&
        Objects.equals(this.ycoordinateField, docPrepperAddFieldsFlowIDRequest.ycoordinateField) &&
        Objects.equals(this.tokenField, docPrepperAddFieldsFlowIDRequest.tokenField);
  }

  @Override
  public int hashCode() {
    return Objects.hash(docFieldTypeField, docIDField, flowIDField, heightField, widthField, isInvisibleField, linkToField, pageNumberField, nameField, userEmailField, xcoordinateField, ycoordinateField, tokenField);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocPrepperAddFieldsFlowIDRequest {\n");
    sb.append("    docFieldTypeField: ").append(toIndentedString(docFieldTypeField)).append("\n");
    sb.append("    docIDField: ").append(toIndentedString(docIDField)).append("\n");
    sb.append("    flowIDField: ").append(toIndentedString(flowIDField)).append("\n");
    sb.append("    heightField: ").append(toIndentedString(heightField)).append("\n");
    sb.append("    widthField: ").append(toIndentedString(widthField)).append("\n");
    sb.append("    isInvisibleField: ").append(toIndentedString(isInvisibleField)).append("\n");
    sb.append("    linkToField: ").append(toIndentedString(linkToField)).append("\n");
    sb.append("    pageNumberField: ").append(toIndentedString(pageNumberField)).append("\n");
    sb.append("    nameField: ").append(toIndentedString(nameField)).append("\n");
    sb.append("    userEmailField: ").append(toIndentedString(userEmailField)).append("\n");
    sb.append("    xcoordinateField: ").append(toIndentedString(xcoordinateField)).append("\n");
    sb.append("    ycoordinateField: ").append(toIndentedString(ycoordinateField)).append("\n");
    sb.append("    tokenField: ").append(toIndentedString(tokenField)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

