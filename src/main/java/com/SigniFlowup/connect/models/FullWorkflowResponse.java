/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.SigniFlowup.connect.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.SigniFlowup.connect.JSON;


/**
 * #### The response returned on FullWorkflow.
 */
@ApiModel(description = "#### The response returned on FullWorkflow.")
@JsonPropertyOrder({
  FullWorkflowResponse.JSON_PROPERTY_DOC_FIELD,
  FullWorkflowResponse.JSON_PROPERTY_DOC_I_D_FIELD,
  FullWorkflowResponse.JSON_PROPERTY_PORTFOLIO_I_D_FIELD,
  FullWorkflowResponse.JSON_PROPERTY_RESULT_FIELD,
  FullWorkflowResponse.JSON_PROPERTY_STATUS_FIELD
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FullWorkflowResponse {
  public static final String JSON_PROPERTY_DOC_FIELD = "DocField";
  private String docField;

  public static final String JSON_PROPERTY_DOC_I_D_FIELD = "DocIDField";
  private BigDecimal docIDField;

  public static final String JSON_PROPERTY_PORTFOLIO_I_D_FIELD = "PortfolioIDField";
  private BigDecimal portfolioIDField;

  public static final String JSON_PROPERTY_RESULT_FIELD = "ResultField";
  private String resultField;

  public static final String JSON_PROPERTY_STATUS_FIELD = "StatusField";
  private String statusField;


  public FullWorkflowResponse docField(String docField) {
    this.docField = docField;
    return this;
  }

   /**
   * Get docField
   * @return docField
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DOC_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDocField() {
    return docField;
  }


  public void setDocField(String docField) {
    this.docField = docField;
  }


  public FullWorkflowResponse docIDField(BigDecimal docIDField) {
    this.docIDField = docIDField;
    return this;
  }

   /**
   * Get docIDField
   * @return docIDField
  **/
  @ApiModelProperty(example = "1237", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DOC_I_D_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getDocIDField() {
    return docIDField;
  }


  public void setDocIDField(BigDecimal docIDField) {
    this.docIDField = docIDField;
  }


  public FullWorkflowResponse portfolioIDField(BigDecimal portfolioIDField) {
    this.portfolioIDField = portfolioIDField;
    return this;
  }

   /**
   * Get portfolioIDField
   * @return portfolioIDField
  **/
  @ApiModelProperty(example = "11112", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PORTFOLIO_I_D_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getPortfolioIDField() {
    return portfolioIDField;
  }


  public void setPortfolioIDField(BigDecimal portfolioIDField) {
    this.portfolioIDField = portfolioIDField;
  }


  public FullWorkflowResponse resultField(String resultField) {
    this.resultField = resultField;
    return this;
  }

   /**
   * Displays the result of the call.
   * @return resultField
  **/
  @ApiModelProperty(required = true, value = "Displays the result of the call.")
  @JsonProperty(JSON_PROPERTY_RESULT_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getResultField() {
    return resultField;
  }


  public void setResultField(String resultField) {
    this.resultField = resultField;
  }


  public FullWorkflowResponse statusField(String statusField) {
    this.statusField = statusField;
    return this;
  }

   /**
   * Get statusField
   * @return statusField
  **/
  @ApiModelProperty(example = "Completed", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATUS_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatusField() {
    return statusField;
  }


  public void setStatusField(String statusField) {
    this.statusField = statusField;
  }


  /**
   * Return true if this FullWorkflowResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FullWorkflowResponse fullWorkflowResponse = (FullWorkflowResponse) o;
    return Objects.equals(this.docField, fullWorkflowResponse.docField) &&
        Objects.equals(this.docIDField, fullWorkflowResponse.docIDField) &&
        Objects.equals(this.portfolioIDField, fullWorkflowResponse.portfolioIDField) &&
        Objects.equals(this.resultField, fullWorkflowResponse.resultField) &&
        Objects.equals(this.statusField, fullWorkflowResponse.statusField);
  }

  @Override
  public int hashCode() {
    return Objects.hash(docField, docIDField, portfolioIDField, resultField, statusField);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FullWorkflowResponse {\n");
    sb.append("    docField: ").append(toIndentedString(docField)).append("\n");
    sb.append("    docIDField: ").append(toIndentedString(docIDField)).append("\n");
    sb.append("    portfolioIDField: ").append(toIndentedString(portfolioIDField)).append("\n");
    sb.append("    resultField: ").append(toIndentedString(resultField)).append("\n");
    sb.append("    statusField: ").append(toIndentedString(statusField)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

