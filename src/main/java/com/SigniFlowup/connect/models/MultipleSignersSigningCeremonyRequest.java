/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.SigniFlowup.connect.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.SigniFlowup.connect.models.MultipleSignersSigningCeremonyRequestSignerListField;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.SigniFlowup.connect.JSON;


/**
 * #### This is the request sent when there are multiple signers on a document.
 */
@ApiModel(description = "#### This is the request sent when there are multiple signers on a document.")
@JsonPropertyOrder({
  MultipleSignersSigningCeremonyRequest.JSON_PROPERTY_DOC_FIELD,
  MultipleSignersSigningCeremonyRequest.JSON_PROPERTY_DOC_NAME_FIELD,
  MultipleSignersSigningCeremonyRequest.JSON_PROPERTY_LOGIN_PASSWORD_FIELD,
  MultipleSignersSigningCeremonyRequest.JSON_PROPERTY_LOGIN_USER_NAME_FIELD,
  MultipleSignersSigningCeremonyRequest.JSON_PROPERTY_SIGNER_LIST_FIELD
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MultipleSignersSigningCeremonyRequest {
  public static final String JSON_PROPERTY_DOC_FIELD = "DocField";
  private String docField;

  public static final String JSON_PROPERTY_DOC_NAME_FIELD = "DocNameField";
  private String docNameField;

  public static final String JSON_PROPERTY_LOGIN_PASSWORD_FIELD = "LoginPasswordField";
  private String loginPasswordField;

  public static final String JSON_PROPERTY_LOGIN_USER_NAME_FIELD = "LoginUserNameField";
  private String loginUserNameField;

  public static final String JSON_PROPERTY_SIGNER_LIST_FIELD = "SignerListField";
  private Set<MultipleSignersSigningCeremonyRequestSignerListField> signerListField = new LinkedHashSet<>();


  public MultipleSignersSigningCeremonyRequest docField(String docField) {
    this.docField = docField;
    return this;
  }

   /**
   * Get docField
   * @return docField
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DOC_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDocField() {
    return docField;
  }


  public void setDocField(String docField) {
    this.docField = docField;
  }


  public MultipleSignersSigningCeremonyRequest docNameField(String docNameField) {
    this.docNameField = docNameField;
    return this;
  }

   /**
   * Get docNameField
   * @return docNameField
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DOC_NAME_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDocNameField() {
    return docNameField;
  }


  public void setDocNameField(String docNameField) {
    this.docNameField = docNameField;
  }


  public MultipleSignersSigningCeremonyRequest loginPasswordField(String loginPasswordField) {
    this.loginPasswordField = loginPasswordField;
    return this;
  }

   /**
   * User&#39;s password.
   * @return loginPasswordField
  **/
  @ApiModelProperty(example = "12345", required = true, value = "User's password.")
  @JsonProperty(JSON_PROPERTY_LOGIN_PASSWORD_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLoginPasswordField() {
    return loginPasswordField;
  }


  public void setLoginPasswordField(String loginPasswordField) {
    this.loginPasswordField = loginPasswordField;
  }


  public MultipleSignersSigningCeremonyRequest loginUserNameField(String loginUserNameField) {
    this.loginUserNameField = loginUserNameField;
    return this;
  }

   /**
   * User&#39;s username.
   * @return loginUserNameField
  **/
  @ApiModelProperty(example = "John@gmail.com", required = true, value = "User's username.")
  @JsonProperty(JSON_PROPERTY_LOGIN_USER_NAME_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLoginUserNameField() {
    return loginUserNameField;
  }


  public void setLoginUserNameField(String loginUserNameField) {
    this.loginUserNameField = loginUserNameField;
  }


  public MultipleSignersSigningCeremonyRequest signerListField(Set<MultipleSignersSigningCeremonyRequestSignerListField> signerListField) {
    this.signerListField = signerListField;
    return this;
  }

  public MultipleSignersSigningCeremonyRequest addSignerListFieldItem(MultipleSignersSigningCeremonyRequestSignerListField signerListFieldItem) {
    this.signerListField.add(signerListFieldItem);
    return this;
  }

   /**
   * Get signerListField
   * @return signerListField
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SIGNER_LIST_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<MultipleSignersSigningCeremonyRequestSignerListField> getSignerListField() {
    return signerListField;
  }


  public void setSignerListField(Set<MultipleSignersSigningCeremonyRequestSignerListField> signerListField) {
    this.signerListField = signerListField;
  }


  /**
   * Return true if this MultipleSignersSigningCeremonyRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MultipleSignersSigningCeremonyRequest multipleSignersSigningCeremonyRequest = (MultipleSignersSigningCeremonyRequest) o;
    return Objects.equals(this.docField, multipleSignersSigningCeremonyRequest.docField) &&
        Objects.equals(this.docNameField, multipleSignersSigningCeremonyRequest.docNameField) &&
        Objects.equals(this.loginPasswordField, multipleSignersSigningCeremonyRequest.loginPasswordField) &&
        Objects.equals(this.loginUserNameField, multipleSignersSigningCeremonyRequest.loginUserNameField) &&
        Objects.equals(this.signerListField, multipleSignersSigningCeremonyRequest.signerListField);
  }

  @Override
  public int hashCode() {
    return Objects.hash(docField, docNameField, loginPasswordField, loginUserNameField, signerListField);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MultipleSignersSigningCeremonyRequest {\n");
    sb.append("    docField: ").append(toIndentedString(docField)).append("\n");
    sb.append("    docNameField: ").append(toIndentedString(docNameField)).append("\n");
    sb.append("    loginPasswordField: ").append(toIndentedString(loginPasswordField)).append("\n");
    sb.append("    loginUserNameField: ").append(toIndentedString(loginUserNameField)).append("\n");
    sb.append("    signerListField: ").append(toIndentedString(signerListField)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

